{% set name = "line_profiler" %}
{% set version = "3.3.1" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 6e2fb792ca022f900f374f9659fd3e7c530cd4df7d3b7e84be889093b487639f

build:
  number: 0
  script:
    # So Cython regenerates it:
    - rm -rf _line_profiler.c  # [unix]
    - del /s /q _line_profiler.c  # [win]
    - {{ PYTHON }} setup.py install --old-and-unmanageable
  entry_points:
    - kernprof=kernprof:main
  # package is required on linux-s390x
  skip: True  [s390x]

requirements:
  build:
    - {{ compiler('cxx') }}
    - cmake
    - make
  host:
    - python
    - setuptools
    - cython
    - scikit-build
  run:
    - python
    - ipython >=0.13

test:
  imports:
    - kernprof
    - line_profiler

  commands:
    - kernprof --help
    - python -m kernprof --help
    - python -m line_profiler --help

about:
  home: https://github.com/rkern/line_profiler
  license: BSD
  license_file: LICENSE.txt
  summary: Line-by-line profiling for Python
  description: |
    line_profiler will profile the time individual lines of code take to execute.
    The profiler is implemented in C via Cython in order to reduce the overhead of profiling.
  doc_url: https://pypi.python.org/pypi/line_profiler
  doc_source_url: https://github.com/rkern/line_profiler
  dev_url: https://github.com/rkern/line_profiler

extra:
  recipe-maintainers:
    - jakirkham
    - koverholt
