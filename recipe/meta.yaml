{% set name = "line_profiler" %}
{% set version = "4.2.0" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 09e10f25f876514380b3faee6de93fb0c228abba85820ba1a591ddb3eb451a96

build:
  number: 0
  skip: true  # [py<36]
  script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation -vv
  entry_points:
    - kernprof = kernprof:main

requirements:
  build:
    - {{ compiler('cxx') }}
  host:
    - python
    - pip
    - cython >=3.0.3
    - setuptools >=68.2.2
    - wheel
  run:
    - python
  run_constrained:
    - ipython >=8.14.0  # [py>=39]
    - ipython >=8.12.2  # [py==38]
    - ipython >=7.18.0  # [py==37]
    - ipython >=7.14.0  # [py==36]

test:
  source_files:
    - tests
  imports:
    - kernprof
    - line_profiler
  requires:
    - pip
    - pytest
  commands:
    - pip check
    - kernprof --help
    - python -m kernprof --help
    # Ignored tests require ubelt
    - pytest --ignore=tests/test_autoprofile.py --ignore=tests/test_complex_case.py --ignore=tests/test_explicit_profile.py --ignore=tests/test_cli.py

about:
  home: https://github.com/pyutils/line_profiler
  # line_profiler/timers.c falls under the PSF license
  license: BSD-3-Clause AND PSF-2.0
  license_family: BSD
  license_file: LICENSE.txt
  summary: Line-by-line profiling for Python
  description: |
    line_profiler will profile the time individual lines of code take to execute.
    The profiler is implemented in C via Cython in order to reduce the overhead of profiling.
  doc_url: https://github.com/pyutils/line_profiler
  dev_url: https://github.com/pyutils/line_profiler

extra:
  recipe-maintainers:
    - jakirkham
    - koverholt
